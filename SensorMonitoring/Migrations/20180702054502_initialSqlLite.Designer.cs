// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SensorMonitoring.Model;

namespace SensorMonitoring.Migrations
{
    [DbContext(typeof(SensorMonitoringContext))]
    [Migration("20180702054502_initialSqlLite")]
    partial class initialSqlLite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("SensorMonitoring.Model.Lab", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("labs");
                });

            modelBuilder.Entity("SensorMonitoring.Model.Sensor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IndicatorCode");

                    b.Property<int>("LabID");

                    b.Property<string>("SubTitle")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("LabID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("SensorMonitoring.Model.SensorData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Priorty");

                    b.Property<int>("SensorID");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("SensorID");

                    b.ToTable("SensorDatas");
                });

            modelBuilder.Entity("SensorMonitoring.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SensorMonitoring.Model.Lab", b =>
                {
                    b.HasOne("SensorMonitoring.Model.User")
                        .WithMany("Labs")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SensorMonitoring.Model.Sensor", b =>
                {
                    b.HasOne("SensorMonitoring.Model.Lab")
                        .WithMany("Sensors")
                        .HasForeignKey("LabID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SensorMonitoring.Model.SensorData", b =>
                {
                    b.HasOne("SensorMonitoring.Model.Sensor")
                        .WithMany("SensorDatas")
                        .HasForeignKey("SensorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
